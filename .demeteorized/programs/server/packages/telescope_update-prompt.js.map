{"version":3,"sources":["telescope:update-prompt/lib/package_versions.js","telescope:update-prompt/lib/server/phone_home.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gB;AACA,mC;AACA,0B;AACA,kE;AACA,0E;AACA,uD;AACA,S;AACA,mB;AACA,W;AACA,oC;AACA,oB;AACA,wC;AACA,Y;AACA,mB;AACA,+B;AACA,W;AACA,W;AACA,+B;AACA,qD;AACA,6D;AACA,kB;AACA,+B;AACA,yD;AACA,8E;AACA,Y;AACA,W;AACA,iC;AACA,2B;AACA,mB;AACA,sB;AACA,iB;AACA,O;AACA,K;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;AClCA,gB;AACA,2B;;AAEA,iD;;AAEA,kB;AACA,wC;AACA,uC;AACA,4C;AACA,yC;AACA,kC;AACA,uC;AACA,M;;AAEA,uD;;AAEA,qB;AACA,W;AACA,oC;AACA,wB;AACA,W;AACA,sB;AACA,mB;AACA,+E;AACA,qB;AACA,O;AACA,K;AACA,G;AACA,G","file":"/packages/telescope_update-prompt.js","sourcesContent":["Meteor.methods({\n  getPackageVersions: function () {\n    if (Meteor.isServer) {\n      var url = \"https://atmospherejs.com/a/packages/findByNames\";\n      var packageNames = _.filter(_.keys(Package), function (packageName){\n        return packageName.indexOf(\"telescope\") !== -1;\n      });\n      this.unblock;\n      try {\n        var result = HTTP.get(url, {\n          headers: {\n            \"Accept\": \"application/json\"\n          },\n          params: {\n            names: packageNames\n          }\n        });\n        // console.log(result);\n        var packageData = JSON.parse(result.content);\n        var versionData = packageData.map(function (package){\n          return {\n            name: package.name,\n            latestVersion: package.latestVersion.version,\n            currentVersion: MeteorFilesHelpers.getPackageVersion(package.name)\n          };\n        });\n        console.log(versionData);\n        return versionData;\n      } catch (e) {\n        console.log(e)\n        return e;\n      }\n    }\n  }\n});\n","Meteor.methods({\n  phoneHome: function  () {\n\n    var url = 'http://version.telescopeapp.org/';\n\n    var params = {\n      currentVersion: Telescope.VERSION,\n      siteTitle: Settings.get('title'),\n      siteUrl: Telescope.utils.getSiteUrl(),\n      users: Meteor.users.find().count(),\n      posts: Posts.find().count(),\n      comments: Comments.find().count()\n    };\n\n    if(Meteor.user() && Users.is.admin(Meteor.user())){\n\n      this.unblock();\n      try {\n        var result = HTTP.get(url, {\n          params: params\n        });\n        return result;\n      } catch (e) {\n        // Got a network error, time-out or HTTP error in the 400 or 500 range.\n        return false;\n      }\n    }\n  }\n});\n"]}