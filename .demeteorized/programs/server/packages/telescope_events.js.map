{"version":3,"sources":["telescope:events/lib/events.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wC;;AAEA,kC;AACA,c;AACA,c;AACA,I;AACA,S;AACA,gB;AACA,I;AACA,gB;AACA,iB;AACA,kB;AACA,I;AACA,W;AACA,kB;AACA,kB;AACA,I;AACA,+E;AACA,kB;AACA,kB;AACA,I;AACA,e;AACA,iB;AACA,mB;AACA,kB;AACA,G;AACA,G;;AAEA,iC;;AAEA,mC;;AAEA,sB;AACA,iC;;AAEA,6E;AACA,iE;AACA,a;AACA,K;;AAEA,iC;;AAEA,yB;;AAEA,I;AACA,C;;AAEA,2C;AACA,oD;AACA,gC;AACA,Q;AACA,yE;AACA,sB;AACA,iF;AACA,wC;AACA,K;AACA,4F;AACA,6E;AACA,K;AACA,G;AACA,E","file":"/packages/telescope_events.js","sourcesContent":["Events = new Mongo.Collection('events');\n\nEvents.schema = new SimpleSchema({\n  createdAt: {\n    type: Date\n  },\n  name: {\n    type: String\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  unique: {\n    type: Boolean,\n    optional: true\n  },\n  important: { // marking an event as important means it should never be erased\n    type: Boolean,\n    optional: true\n  },\n  properties: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n});\n\nEvents.schema.internationalize();\n\nEvents.attachSchema(Events.schema);\n\nif (Meteor.isServer) {\n  Events.log = function (event) {\n\n    // if event is supposed to be unique, check if it has already been logged\n    if (!!event.unique && !!Events.findOne({name: event.name})) {\n      return;\n    }\n\n    event.createdAt = new Date();\n\n    Events.insert(event);\n\n  };\n}\n\nEvents.track = function(event, properties){\n  // console.log('trackevent: ', event, properties);\n  properties = properties || {};\n  //TODO\n  // add event to an Events collection for logging and buffering purposes\n  if(Meteor.isClient){\n    if(typeof mixpanel !== 'undefined' && typeof mixpanel.track !== 'undefined'){\n      mixpanel.track(event, properties);\n    }\n    if(typeof GoSquared !== 'undefined' && typeof GoSquared.DefaultTracker !== 'undefined'){\n      GoSquared.DefaultTracker.TrackEvent(event, JSON.stringify(properties));\n    }\n  }\n};\n"]}