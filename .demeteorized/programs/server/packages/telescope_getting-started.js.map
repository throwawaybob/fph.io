{"version":3,"sources":["telescope:getting-started//Users/sacha/Dev/Telescope/packages/telescope-getting-started/package-tap.i18n","telescope:getting-started/lib/getting_started.js","telescope:getting-started/lib/server/dummy_content.js","telescope:getting-started//Users/sacha/Dev/Telescope/packages/telescope-getting-started/i18n/en.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2H;;AAEA,+D;AACA,gD;;;;;;;;;;;;;;;;;;;ACHA,gB;AACA,iC;AACA,gB;AACA,kB;AACA,mB;AACA,e;AACA,gB;AACA,K;AACA,G;AACA,G;;AAEA,gB;AACA,yB;AACA,gB;AACA,iB;AACA,mB;AACA,e;AACA,gB;AACA,K;AACA,G;AACA,G;;AAEA,gB;AACA,uB;AACA,gB;AACA,kB;AACA,mB;AACA,e;AACA,gB;AACA,K;AACA,G;AACA,G;;AAEA,mB;AACA,qB;AACA,c;AACA,gB;AACA,iB;AACA,a;AACA,c;AACA,G;AACA,C;AACA,G;;AAEA,G;AACA,kE;AACA,wE;AACA,yC;AACA,G;AACA,4C;AACA,oD;AACA,kD;AACA,G;AACA,c;AACA,C;AACA,2D;;;;;;;;;;;;;;;;;;ACvDA,kC;AACA,iH;AACA,E;;AAEA,iE;AACA,c;AACA,uB;AACA,oD;AACA,gD;AACA,oB;AACA,kB;AACA,0D;AACA,I;;AAEA,uC;AACA,0F;;AAEA,qB;AACA,E;;AAEA,iE;;AAEA,iB;AACA,iD;AACA,2D;AACA,e;AACA,kB;AACA,8B;AACA,I;AACA,2D;AACA,oB;AACA,gD;;AAEA,2B;AACA,E;;AAEA,oC;AACA,uB;AACA,sB;AACA,yC;AACA,c;AACA,mB;AACA,K;AACA,K;AACA,uB;AACA,uB;AACA,yC;AACA,c;AACA,mB;AACA,K;AACA,K;AACA,uB;AACA,sB;AACA,yC;AACA,c;AACA,mB;AACA,K;AACA,K;AACA,E;;AAEA,oC;;AAEA,6E;;AAEA,yF;;AAEA,uF;;AAEA,kG;;AAEA,+F;;AAEA,E;;AAEA,uC;;AAEA,oE;;AAEA,0E;AACA,yH;;AAEA,0E;;AAEA,6E;AACA,+F;;AAEA,E;;AAEA,kC;AACA,iD;AACA,gC;AACA,mC;AACA,E;;AAEA,gB;AACA,yC;AACA,wC;AACA,yB;AACA,yB;AACA,4B;AACA,K;AACA,I;AACA,4C;AACA,sC;AACA,2B;AACA,G;AACA,G;;AAEA,4B;AACA,yG;AACA,+E;AACA,uB;AACA,uB;AACA,0B;AACA,4E;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;;ACpHA,6B;AACA,+C;AACA,4C;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,kB;AACA,mE;AACA,gD","file":"/packages/telescope_getting-started.js","sourcesContent":["TAPi18n.packages[\"telescope:getting-started\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n","Users.addField({\n  fieldName: 'telescope.isDummy',\n  fieldSchema: {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      omit: true\n    }\n  }\n});\n\nPosts.addField({\n  fieldName: 'dummySlug',\n  fieldSchema: {\n    type: String,\n    optional: true,\n    autoform: {\n      omit: true\n    }\n  }\n});\n\nPosts.addField({\n  fieldName: 'isDummy',\n  fieldSchema: {\n    type: Boolean,\n    optional: true,\n    autoform: {\n      omit: true\n    }\n  }\n});\n\nComments.addField({\nfieldName: 'isDummy',\nfieldSchema: {\n  type: Boolean,\n  optional: true,\n  autoform: {\n    omit: true\n  }\n}\n});\n\n/**\n * Copy over profile.isDummy to telescope.isDummy on user creation\n * @param {Object} user – the user object being iterated on and returned\n * @param {Object} options – user options\n */\nfunction copyDummyProperty (user, options) {\n  if (typeof user.profile.isDummy !== \"undefined\") {\n    user.telescope.isDummy = user.profile.isDummy;\n  }\n  return user;\n}\nTelescope.callbacks.add(\"onCreateUser\", copyDummyProperty);","var toTitleCase = function (str) {\n  return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n};\n\nvar createPost = function (slug, postedAt, username, thumbnail) {\n  var post = {\n    postedAt: postedAt,\n    body: Assets.getText(\"content/\" + slug + \".md\"),\n    title: toTitleCase(slug.replace(/_/g, ' ')),\n    dummySlug: slug,\n    isDummy: true,\n    userId: Meteor.users.findOne({username: username})._id\n  };\n\n  if (typeof thumbnail !== \"undefined\")\n    post.thumbnailUrl = \"/packages/telescope_getting-started/content/images/\" + thumbnail;\n\n  Posts.submit(post);\n};\n\nvar createComment = function (slug, username, body, parentBody) {\n\n  var comment = {\n    postId: Posts.findOne({dummySlug: slug})._id,\n    userId: Meteor.users.findOne({username: username})._id,\n    body: body,\n    isDummy: true,\n    disableNotifications: true\n  };\n  var parentComment = Comments.findOne({body: parentBody});\n  if (parentComment)\n    comment.parentCommentId = parentComment._id;\n\n  Comments.submit(comment);\n};\n\nvar createDummyUsers = function () {\n  Accounts.createUser({\n    username: 'Bruce',\n    email: 'dummyuser1@telescopeapp.org',\n    profile: {\n      isDummy: true\n    }\n  });\n  Accounts.createUser({\n    username: 'Arnold',\n    email: 'dummyuser2@telescopeapp.org',\n    profile: {\n      isDummy: true\n    }\n  });\n  Accounts.createUser({\n    username: 'Julia',\n    email: 'dummyuser3@telescopeapp.org',\n    profile: {\n      isDummy: true\n    }\n  });\n};\n\nvar createDummyPosts = function () {\n\n  createPost(\"read_this_first\", moment().toDate(), \"Bruce\", \"telescope.png\");\n\n  createPost(\"deploying_telescope\", moment().subtract(10, 'minutes').toDate(), \"Arnold\");\n\n  createPost(\"customizing_telescope\", moment().subtract(3, 'hours').toDate(), \"Julia\");\n\n  createPost(\"getting_help\", moment().subtract(1, 'days').toDate(), \"Bruce\", \"stackoverflow.png\");\n\n  createPost(\"removing_getting_started_posts\", moment().subtract(2, 'days').toDate(), \"Julia\");\n\n};\n\nvar createDummyComments = function () {\n\n  createComment(\"read_this_first\", \"Bruce\", \"What an awesome app!\");\n\n  createComment(\"deploying_telescope\", \"Arnold\", \"Deploy to da choppah!\");\n  createComment(\"deploying_telescope\", \"Julia\", \"Do you really need to say this all the time?\", \"Deploy to da choppah!\");\n\n  createComment(\"customizing_telescope\", \"Julia\", \"This is really cool!\");\n\n  createComment(\"removing_getting_started_posts\", \"Bruce\", \"Yippee ki-yay!\");\n  createComment(\"removing_getting_started_posts\", \"Arnold\", \"I'll be back.\", \"Yippee ki-yay!\");\n\n};\n\ndeleteDummyContent = function () {\n  Meteor.users.remove({'profile.isDummy': true});\n  Posts.remove({isDummy: true});\n  Comments.remove({isDummy: true});\n};\n\nMeteor.methods({\n  addGettingStartedContent: function () {\n    if (Users.is.admin(Meteor.user())) {\n      createDummyUsers();\n      createDummyPosts();\n      createDummyComments();\n    }\n  },\n  removeGettingStartedContent: function () {\n    if (Users.is.admin(Meteor.user()))\n      deleteDummyContent();\n  }\n});\n\nMeteor.startup(function () {\n  // insert dummy content only if createDummyContent hasn't happened and there aren't any posts in the db\n  if (!Events.findOne({name: 'createDummyContent'}) && !Posts.find().count()) {\n    createDummyUsers();\n    createDummyPosts();\n    createDummyComments();\n    Events.log({name: 'createDummyContent', unique: true, important: true});\n  }\n});\n","var _ = Package.underscore._,\n    package_name = \"telescope:getting-started\",\n    namespace = \"telescope:getting-started\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"translation_key\":\"translation string\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\n"]}